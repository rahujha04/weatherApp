{"version":3,"sources":["components/DetailCard.js","components/Header.js","App.js","index.js"],"names":["DetailCard","_ref","weather_icon","_data$list$","data","list","clouds","main","weather","_jsxs","className","children","Math","round","temp","_jsx","src","description","moment","format","humidity","temp_max","temp_min","all","feels_like","Header","App","API_KEY","process","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","noData","setNoData","_useState5","_useState6","searchTerm","setSearchTerm","_useState7","_useState8","weatherData","setWeatherData","_useState9","_useState10","city","setCity","_useState11","_useState12","suggestions","setSuggestions","_useState13","concat","_useState14","weatherIcon","setWeatherIcon","useEffect","setTimeout","onSuggestionsFetchRequested","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","value","wrap","_context","prev","next","fetchSuggestions","sent","stop","_x","apply","arguments","getWeather","_ref5","_callee2","location","how_to_search","res","_context2","fetch","json","cod","abrupt","name","country","t0","console","log","_x2","_ref6","_callee3","_context3","_x3","inputProps","placeholder","onChange","event","newValue","required","inputStyles","ClimbingBoxLoader","size","color","aria-hidden","noValidate","onSubmit","e","preventDefault","Autosuggest","type","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","onSuggestionSelected","_ref4","theme","container","input","suggestionsContainer","suggestionsList","suggestionHighlighted","length","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f904e32.chunk.js","sourcesContent":["import moment from 'moment';\r\nimport '../app.css'\r\n\r\nfunction DetailCard({weather_icon, data}) {\r\n    const {clouds, main, weather} = data.list[0]\r\n\r\n    return (\r\n        <div className=\"container p-4 flex items-center justify-center shadow-lg rounded-lg bg-white h-1/3 mb-auto app_detail\">\r\n            <div className=\"my-auto w-2/4\">\r\n            <p className=\"font-bold text-5xl text-pink-800 mb-2\">{Math.round(main.temp)}&deg;C</p>\r\n            <p className=\"text-4xl text-gray-800 tracking-widest\">{weather[0].main}\r\n                <img src={weather_icon} className=\"w-1/4 inline\" />\r\n            </p>\r\n            <p className=\"text-gray-400 text-xs uppercase tracking-widest\">{weather[0].description}</p>\r\n            <p className=\"tracking-wider\">{moment().format(\"dddd MMM YYYY\")}</p>\r\n            </div>\r\n            <div className=\"my-2 border-l-2 border-gray-100 p-2 app_detail_second\">\r\n            <p className=\"text-gray-400 text-lg app_detail_second_font\">Humidity: {main.humidity}%</p>\r\n            <p className=\"text-gray-400 text-lg app_detail_second_font\">Max Temp: {Math.round(main.temp_max)}&deg;C</p>\r\n            <p className=\"text-gray-400 text-lg app_detail_second_font\">Min Temp: {Math.round(main.temp_min)}&deg;C</p>\r\n            <p className=\"text-gray-400 text-lg app_detail_second_font\">Cloud Cover: {clouds.all}%</p>\r\n            <p className=\"text-gray-400 text-lg app_detail_second_font\">RealFeel: {Math.round(main.feels_like)}&deg;C</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DetailCard\r\n","function Header() {\r\n    return (\r\n        <ul className=\"flex ml-auto w-full font-bold\">\r\n            <li className=\"text-xs text-gray-800 ml-auto mr-6 border-b-2 border-green-400 cursor-pointer\">Weather</li>\r\n            <li className=\"text-xs text-gray-800 mr-6 alert-notice cursor-pointer border-b-2 hover:border-green-400\">Alerts</li>\r\n            <li className=\"text-xs text-gray-800 mr-6 cursor-pointer border-b-2 hover:border-green-400\">Map</li>\r\n            <li className=\"text-xs text-gray-800 mr-6 cursor-pointer border-b-2 hover:border-green-400\">Satellite</li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { useEffect, useState } from \"react\";\r\nimport DetailCard from \"./components/DetailCard\";\r\nimport Header from \"./components/Header\";\r\nimport ClimbingBoxLoader from \"react-spinners/ClimbingBoxLoader\";\r\nimport \"./app.css\";\r\nimport Autosuggest from \"react-autosuggest\";\r\n\r\nfunction App() {\r\n  const API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [noData, setNoData] = useState(\"No Data Yet\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [weatherData, setWeatherData] = useState([]);\r\n  const [city, setCity] = useState(\"Unknown location\");\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [weatherIcon, setWeatherIcon] = useState(\r\n    `${process.env.REACT_APP_ICON_URL}10n@2x.png`\r\n  );\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const handleChange = (event, { newValue }) => {\r\n    setSearchTerm(newValue);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    getWeather(searchTerm);\r\n  };\r\n\r\n  const getSuggestionValue = (suggestion) => suggestion.name;\r\n\r\n  const renderSuggestion = (suggestion) => <span>{suggestion.name}</span>;\r\n\r\n  const onSuggestionsFetchRequested = async ({ value }) => {\r\n    const suggestions = await fetchSuggestions(value);\r\n    setSuggestions(suggestions);\r\n  };\r\n\r\n  const onSuggestionSelected = (event, { suggestion }) => {\r\n    getWeather(suggestion.name);\r\n  };\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const getWeather = async (location) => {\r\n    setWeatherData([]);\r\n    let how_to_search =\r\n      typeof location === \"string\"\r\n        ? `q=${location}`\r\n        : `lat=${location[0]}&lon=${location[1]}`;\r\n\r\n    try {\r\n      let res = await fetch(\r\n        `${\r\n          process.env.REACT_APP_URL + how_to_search\r\n        }&appid=${API_KEY}&units=metric&cnt=5&exclude=hourly,minutely`\r\n      );\r\n      let data = await res.json();\r\n      if (data.cod !== \"200\") {\r\n        setWeatherData([]); // Here I am Clearing the weatherData state\r\n        setNoData(\"Location Not Found\");\r\n        return;\r\n      }\r\n      // console.log(data);\r\n      setWeatherData(data);\r\n      setCity(`${data.city.name}, ${data.city.country}`);\r\n      setWeatherIcon(\r\n        `${\r\n          process.env.REACT_APP_ICON_URL + data.list[0].weather[0][\"icon\"]\r\n        }@4x.png`\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchSuggestions = async (value) => {\r\n    try {\r\n      const res = await fetch(\r\n        `https://api.openweathermap.org/geo/1.0/direct?q=${value}&limit=5&appid=${API_KEY}`\r\n      );\r\n      const data = await res.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const inputProps = {\r\n    placeholder: \"Enter location\",\r\n    value: searchTerm,\r\n    onChange: handleChange,\r\n    required: true,\r\n  };\r\n\r\n  const inputStyles = {\r\n    container: \"relative\",\r\n    input:\r\n      \"rounded-xl py-2 px-3 w-2/3 bg-gray-300 bg-opacity-60 text-white placeholder-gray-200\",\r\n    suggestionsContainer:\r\n      \"absolute z-10 left-0 right-0 mt-2 bg-white text-black rounded-lg shadow-lg\",\r\n    suggestionsList: \"p-2\",\r\n    suggestion: \"cursor-pointer py-2 px-4 hover:bg-gray-200\",\r\n    suggestionHighlighted: \"bg-gray-200\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-700 flex items-center justify-center w-screen h-screen py-10 px-10\">\r\n      {loading ? (\r\n        <ClimbingBoxLoader size={30} color={\"#F37A24\"} loading={loading} />\r\n      ) : (\r\n        <div className=\"flex xl:w-3/4 xl:h-3/4 sm:w-2/4 sm:h-2/4  rounded-3xl shadow-lg m-auto bg-gray-100 app_box_container\">\r\n          {/* This is the form card section  */}\r\n          <div className=\"form-container w-2/4 app_box_container_one\">\r\n            <div className=\"flex items-center justify-center\">\r\n              <h3\r\n                className=\"my-auto mr-auto text-xl text-pink-800 font-bold shadow-md py-1 px-3 \r\n            rounded-md bg-white bg-opacity-30\"\r\n              >\r\n                Weather Forecast\r\n              </h3>\r\n              <div className=\"flex p-2 text-gray-100 bg-gray-600 bg-opacity-30 rounded-lg\">\r\n                <i className=\"fa fa-map my-auto\" aria-hidden=\"true\"></i>\r\n                <div className=\"text-right\">\r\n                  <p className=\"font-semibold text-sm ml-2\">{city}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-col items-center justify-center h-full\">\r\n              <h1 className=\"text-white text-2xl app_heading\">\r\n                Your Personalized Weather Forecast\r\n              </h1>\r\n              <hr className=\"h-1 bg-white w-1/4 rounded-full my-5\" />\r\n              <form\r\n                noValidate\r\n                onSubmit={handleSubmit}\r\n                className=\"flex justify-center w-full\"\r\n              >\r\n                <Autosuggest\r\n                  type=\"text\"\r\n                  placeholder=\"Enter location\"\r\n                  inputProps={inputProps}\r\n                  suggestions={suggestions}\r\n                  onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n                  onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n                  getSuggestionValue={getSuggestionValue}\r\n                  renderSuggestion={renderSuggestion}\r\n                  onSuggestionSelected={onSuggestionSelected} // Add this line\r\n                  theme={{\r\n                    container: inputStyles.container,\r\n                    input: inputStyles.input,\r\n                    suggestionsContainer: inputStyles.suggestionsContainer,\r\n                    suggestionsList: inputStyles.suggestionsList,\r\n                    suggestion: inputStyles.suggestion,\r\n                    suggestionHighlighted: inputStyles.suggestionHighlighted,\r\n                  }}\r\n                  required\r\n                />\r\n\r\n                <button type=\"submit\" className=\"z-10\">\r\n                  <i\r\n                    className=\"fa fa-search text-white -ml-10 border-l my-auto z-10 cursor-pointer p-3\"\r\n                    aria-hidden=\"true\"\r\n                    type=\"submit\"\r\n                  ></i>\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          {/* This is the info card section  */}\r\n          <div className=\"w-2/4 p-5 app_box_container_two\">\r\n            <Header />\r\n            <div className=\"flex flex-col my-10\">\r\n              {/* This is card jsx  */}\r\n              {weatherData.length === 0 ? (\r\n                <div className=\"container p-4 flex items-center justify-center h-1/3 mb-auto\">\r\n                  <h1 className=\"text-gray-300 text-4xl font-bold uppercase app_nodata\">\r\n                    {noData}\r\n                  </h1>\r\n                </div>\r\n              ) : (\r\n                <div className=\"app_detail_data\">\r\n                  <h1 className=\"text-5xl text-gray-800 mt-auto mb-4 app_today\">\r\n                    Today's Weather\r\n                  </h1>\r\n                  <DetailCard weather_icon={weatherIcon} data={weatherData} />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}